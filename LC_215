#31 / 31 test cases passed.
#Status: Accepted
#Runtime: 4676 ms

#by Quick select
class Solution(object):
    def findKthLargest(self, nums, k):
        pivot = nums[0]
        left = []
        right = []
        equalNum = 0
        for x in range(1,len(nums)):
            if nums[x] >= pivot:
                left.append(nums[x])
            elif nums[x] < pivot:
                right.append(nums[x])

        if len(left)== k-1:
            return pivot
        elif len(left)<k and len(right)>0:
            return self.findKthLargest(right, k-len(left)-1)
        elif len(left)>=k and len(left)>0:
            return self.findKthLargest(left, k)
